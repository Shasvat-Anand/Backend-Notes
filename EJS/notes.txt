# Lecture 1 what is templating

Template is blueprint of the html page that having being using so many time in our website.

EJS (Embedded JavaScript Templates)
EJS is a simple templating language that lets your generate HTML markup with plain JavaScript

1- create directory for the EJS
2- inside ejs directory use (npm init -y ) it set package.json file default
3- install express using (npm install express)
4- install ejs by using commnand (npm install ejs)

after that require express and run your server


#Lecture 2  Using EJS

ejs is package we do not need to require it because express require ejs by default

so we are going to use directly 


app.set("view engine","ejs")

it says we are going to use ejs templete for the website 

for response we are going to use
 res.render("filename.ejs")

 res.render render the whole file to server 
 when we use this render with filename express search that file into a views folder in that directory and then render that file .

if we want to run index.js of ejs dir. from root directory we are doing so.

go to the root dir. and run this commnand

nodemon EJS/index.js

it run that file but it give an error when we render files from views because it search views dir into the root directory


### Lecture -3  view directory

so resolve this we are going to use path package

const path = require("path")

app.set("views",path.join(__dirname,"/views")) from this line we define the exect path of views

it mean when search "views" go the __dirname -- it give the current working dir of index.js which is currently running and join that with "/views"

this total give us a correct dir of views -- filename


### Lecture 4 Interpolation Syntax

Interpolation refer to embedding expressions into marked up text

Ejs tags 
<%   'Scriptlet' tag, for control-flow, no output.

<%_   'whitespace  Slurping' Scriptlet tag, strips all whitespace before it

<%=   output the value into the template (HTML escaped) this means finally output is html string....

<%-   output the unescaped value into the template

<%#   comment tag, no execution, no output

<%%   output a literal '<%'

%>   plain ending tag

-%>   Trim-mode ('newline slurp') tag, trims following newline

_%>   'whitespace Slurping' ending tag, remove all whitespace after it.


So, interpolation syntax in EJS generally refers to <%= variable %> (for escaped output) and <%- variable %> (for unescaped/raw output).

#### Lecture 5 :- Passing data to Ejs


app. get ("/rolldice" ,( req, res)=> {
let num = Math. floor(Math. random() * 6) + 1;
res. render( " rollDice. ej s" ,{ diceVal: num})
})

<h1>Your dice gave value : <%= diceVal %></hl>



### Lecture 6 Instagram Ejs

Create a basic template for instagram page based on the following route based on username

/ig/:username

Steps :-

1- create a route in index.js (ig/:username)
2- create a file in views folder name(instagram.ejs)
3- create a boiler plate of html with 1 h1 and 2 button

  <h2>This page belongs to  @<%= username %> </h2>
    <button>follow</button>
    <button>Message</button>
at place of username we are using ejs tag to show the username which come from route 


4- from index.js route of (ig/:username)
we drag username from (req.params)
store into variable and send with the render

app.get("/ig/:username",(req,res)=>{
    let {username} = req.params
    res.render("instagram.ejs",{username})
})


#### Lecture 7  Conditional Statement in EJS
Adding condition inside ejs


    <% if(num == 6) {%>
        <h1> Nice! roll again</h1>
    <% } %>


    this how we use ejs tag (<% for the writing conditional and looping)

### Lecture 8 Loops in ejs

<h3>Follwers that follow you</h3>
    <ul>
        <% for(let name of followers){ %>    
            <li><%=name%></li>
    <% } %>

    </ul>

we are using (<%= ) for print the name which treat the name as variable


### Lecture 9  Instagram page with ejs

const instadata = require("./data.json)


creating insta page in view folder


## Lecture 10 include 

way of creating subtemplates

create a folder inside view (includes)
inside includes create a file which use want to use as included

in this case I am using head of html code
or like you can create:-
 
header 
footer 
and what you want

<%- include("includes/head.ejs")  %>